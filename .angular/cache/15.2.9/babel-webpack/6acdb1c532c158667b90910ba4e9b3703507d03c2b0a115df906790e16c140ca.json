{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./loging.service\";\nexport class AccountService {\n  constructor(loggingService) {\n    this.loggingService = loggingService;\n    this.accounts = [{\n      name: 'Master Account',\n      status: 'active'\n    }, {\n      name: 'Testaccount',\n      status: 'inactive'\n    }, {\n      name: 'Hidden Account',\n      status: 'unknown'\n    }];\n    this.statusUpdated = new EventEmitter();\n  }\n  onAccountAdded(newAccount) {\n    this.accounts.push(newAccount);\n    this.loggingService.logStatusChange(newAccount.status);\n  }\n  onStatusChanged(updateInfo) {\n    this.accounts[updateInfo.id].status = updateInfo.newStatus;\n    this.loggingService.logStatusChange(updateInfo.newStatus);\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.LoggingService));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;;;AAKxD,OAAM,MAAOC,cAAc;EAiBvBC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAhBlC,aAAQ,GAAG,CACP;MACIC,IAAI,EAAE,gBAAgB;MACtBC,MAAM,EAAE;KACX,EACD;MACID,IAAI,EAAE,aAAa;MACnBC,MAAM,EAAE;KACX,EACD;MACID,IAAI,EAAE,gBAAgB;MACtBC,MAAM,EAAE;KACX,CACJ;IACD,kBAAa,GAAG,IAAIL,YAAY,EAAU;EAEY;EACtDM,cAAc,CAACC,UAA4C;IACvD,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,UAAU,CAAC;IAC9B,IAAI,CAACJ,cAAc,CAACO,eAAe,CAACH,UAAU,CAACF,MAAM,CAAC;EAC1D;EAEAM,eAAe,CAACC,UAA6C;IACzD,IAAI,CAACJ,QAAQ,CAACI,UAAU,CAACC,EAAE,CAAC,CAACR,MAAM,GAAGO,UAAU,CAACE,SAAS;IAC1D,IAAI,CAACX,cAAc,CAACO,eAAe,CAACE,UAAU,CAACE,SAAS,CAAC;EAC7D;;AA1BSb,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAc,SAAdd,cAAc;EAAAe,YAFD;AAAM","names":["EventEmitter","AccountService","constructor","loggingService","name","status","onAccountAdded","newAccount","accounts","push","logStatusChange","onStatusChanged","updateInfo","id","newStatus","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\My Projects\\AngularProject\\Max_Lesson\\src\\app\\Component\\Services\\account.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { LoggingService } from './loging.service';\r\n\r\n@Injectable({ providedIn: \"root\" })\r\n\r\nexport class AccountService {\r\n    accounts = [\r\n        {\r\n            name: 'Master Account',\r\n            status: 'active'\r\n        },\r\n        {\r\n            name: 'Testaccount',\r\n            status: 'inactive'\r\n        },\r\n        {\r\n            name: 'Hidden Account',\r\n            status: 'unknown'\r\n        }\r\n    ];\r\n    statusUpdated = new EventEmitter<string>();\r\n\r\n    constructor(private loggingService: LoggingService) { }\r\n    onAccountAdded(newAccount: { name: string, status: string }) {\r\n        this.accounts.push(newAccount);\r\n        this.loggingService.logStatusChange(newAccount.status);\r\n    }\r\n\r\n    onStatusChanged(updateInfo: { id: number, newStatus: string }) {\r\n        this.accounts[updateInfo.id].status = updateInfo.newStatus;\r\n        this.loggingService.logStatusChange(updateInfo.newStatus);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}