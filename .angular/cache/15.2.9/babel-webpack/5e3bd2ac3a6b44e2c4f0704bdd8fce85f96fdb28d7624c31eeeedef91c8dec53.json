{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/account.service\";\nimport * as i2 from \"@angular/common\";\nfunction AccountComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"hr\");\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AccountComponent_div_0_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSetTo(i_r2, \"active\"));\n    });\n    i0.ɵɵtext(9, \"Set to 'active'\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AccountComponent_div_0_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSetTo(i_r2, \"inactive\"));\n    });\n    i0.ɵɵtext(11, \"Set to 'inactive'\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AccountComponent_div_0_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onSetTo(i_r2, \"unknown\"));\n    });\n    i0.ɵɵtext(13, \"Set to 'unknown'\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const account_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(account_r1.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"This account is \", account_r1.status, \"\");\n  }\n}\nexport class AccountComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.accounts = [];\n    this.accounts = this.accountService.accounts;\n  }\n  onSetTo(id, status) {\n    this.accountService.onStatusChanged({\n      id: id,\n      newStatus: status\n    });\n  }\n}\nAccountComponent.ɵfac = function AccountComponent_Factory(t) {\n  return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n};\nAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountComponent,\n  selectors: [[\"app-account\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-xs-12\", \"col-md-8\", \"col-md-offset-2\"], [1, \"btn\", \"btn-outline-success\", 3, \"click\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [1, \"btn\", \"btn-outline-primary\", 3, \"click\"]],\n  template: function AccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AccountComponent_div_0_Template, 14, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.accounts);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\".row[_ngcontent-%COMP%] {\\n  border: 1px solid #ccc;\\n  margin: 10px 0;\\n  padding: 10px 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50L0FjY291bnQvYWNjb3VudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQXNCO0VBQ3RCLGNBQWM7RUFDZCxlQUFlO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdyB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIG1hcmdpbjogMTBweCAwO1xuICBwYWRkaW5nOiAxMHB4IDA7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;IAAAA,2BAAsD;IAG5CA,YAAkB;IAAAA,iBAAK;IAC3BA,qBAAI;IACJA,yBAAG;IAAAA,YAAoC;IAAAA,iBAAI;IAC3CA,iCAAsE;IAA9BA;MAAA;MAAA;MAAA;MAAA,OAASA,oCAAU,QAAQ,CAAC;IAAA,EAAC;IAACA,+BAAe;IAAAA,iBAAS;IAC9FA,kCAAuE;IAAhCA;MAAA;MAAA;MAAA;MAAA,OAASA,oCAAU,UAAU,CAAC;IAAA,EAAC;IAACA,kCAAiB;IAAAA,iBAAS;IACjGA,kCAAuE;IAA/BA;MAAA;MAAA;MAAA;MAAA,OAASA,oCAAU,SAAS,CAAC;IAAA,EAAC;IAACA,iCAAgB;IAAAA,iBAAS;;;;IAL5FA,eAAkB;IAAlBA,qCAAkB;IAEnBA,eAAoC;IAApCA,gEAAoC;;;ACG7C,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,cAA+B;IAA/B,mBAAc,GAAdA,cAAc;IAFlC,aAAQ,GAAsC,EAAE;IAG9C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACD,cAAc,CAACC,QAAQ;EAC9C;EAEAC,OAAO,CAACC,EAAS,EAACC,MAAc;IAC9B,IAAI,CAACJ,cAAc,CAACK,eAAe,CAAC;MAACF,EAAE,EAACA,EAAE;MAAEG,SAAS,EAAGF;IAAM,CAAC,CAAC;EAClE;;AAVWN,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR7Bd,kEAWM;;;MAXmBA,sCAAa","names":["i0","AccountComponent","constructor","accountService","accounts","onSetTo","id","status","onStatusChanged","newStatus","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\My Projects\\AngularProject\\Max_Lesson\\src\\app\\Component\\Account\\account.component.html","C:\\Users\\User\\Desktop\\My Projects\\AngularProject\\Max_Lesson\\src\\app\\Component\\Account\\account.component.ts"],"sourcesContent":["<div *ngFor=\"let account of accounts; let i = index;\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-md-8 col-md-offset-2\">\n      <h5>{{ account.name }}</h5>\n      <hr>\n      <p>This account is {{ account.status }}</p>\n      <button class=\"btn btn-outline-success\" (click)=\"onSetTo(i,'active')\">Set to 'active'</button>\n      <button class=\"btn btn-outline-danger\" (click)=\"onSetTo(i,'inactive')\">Set to 'inactive'</button>\n      <button class=\"btn btn-outline-primary\" (click)=\"onSetTo(i,'unknown')\">Set to 'unknown'</button>\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AccountService } from '../Services/account.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent {\n\n  accounts : {name: string, status: string}[] = [];\n\n  constructor(private accountService : AccountService) {\n    this.accounts = this.accountService.accounts;\n  }\n\n  onSetTo(id:number,status: string) {\n    this.accountService.onStatusChanged({id:id, newStatus : status});\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}